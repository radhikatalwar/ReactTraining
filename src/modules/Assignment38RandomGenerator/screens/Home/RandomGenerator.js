import {
  Button,
  makeStyles,
  Paper,
  TextField,
  Typography,
} from "@material-ui/core";
import React, { useState } from "react";

const styles = makeStyles({
  mainContainer: {
    display: "flex",
    alignItems: "center",
    padding: "20px 10% 30px 10%",
    justifyContent: "space-between",
  },
  leftMainContainer: {
    width: "49%",
  },
  rightMainContainer: {
    width: "45%",
    display: "flex",
    flexDirection: "column",
    alignItems: "center",
  },
  image: {
    width: "100%",
    marginLeft: "120px",
  },
  input: { backgroundColor: "white", width: "99%" },
  paper: { padding: "50px", backgroundColor: "#a07cc5" },
  heading: {
    fontSize: "30px",
    letterSpacing: "1px",
    fontWeight: "700",
    backgroundColor: "white",
    color: "#a07cc5",
    marginBottom: "15px",
    display: "block",
    padding: "5px 10px",
  },
  inputContainer: {
    display: "flex",
    justifyContent: "space-between",
  },
  button: {
    margin: "20px 30px 0 0",
    fontSize: "17px",
    textTransform: "none",
    padding: "15px",
    color: "#a07cc5",
    backgroundColor: "white",
    fontWeight: "900",
    width: "100%",
    "&:hover": {
      color: "#a07cc5",
      backgroundColor: "white",
    },
  },
  mainHeading: {
    textAlign: "center",
    marginTop: "30px",
    fontSize: "31px",
    letterSpacing: "2px",
    fontWeight: "900",
    color: "#a07cc5",
    fontFamily: "ui-monospace",
  },
  title: {
    textAlign: "center",
    marginTop: "22px",
    fontSize: "20px",
    letterSpacing: "1px",
    fontWeight: "900",
    color: "#a07cc5",
    fontFamily: "ui-monospace",
  },
});

export const RandomGenerator = () => {
  const classes = styles();
  const [minVal, setMinVal] = useState(0);
  const [maxVal, setMaxVal] = useState(10);
  const [randomVal, setRandomVal] = useState(
    Math.floor(Math.random() * (maxVal - minVal + 1) + minVal)
  );

  const handleRandomNum = () => {
    if (minVal > maxVal) {
      setMaxVal(minVal + 1);
      setRandomVal(minVal);
    }
    setRandomVal(Math.floor(Math.random() * (maxVal - minVal + 1) + minVal));
  };

  return (
    <>
      <Typography className={classes.mainHeading}>
        {"Random Number Generator"}
      </Typography>
      <div className={classes.mainContainer}>
        <div className={classes.leftMainContainer}>
          <img
            src="../images/assignment38/photo1.jpg"
            alt={"background"}
            width={"100%"}
          />
        </div>
        <div className={classes.rightMainContainer}>
          <Paper className={classes.paper} elevation={7}>
            <Typography
              variant="h5"
              className={classes.heading}
            >{`Random Number : ${randomVal}`}</Typography>
            <form className={classes.form} noValidate autoComplete="off">
              <div className={classes.inputContainer}>
                <div>
                  <Typography>{"Minimum Value:"}</Typography>
                  <TextField
                    className={classes.input}
                    type="number"
                    variant="outlined"
                    value={minVal}
                    name="minVal"
                    onChange={(e) => setMinVal(Number(e.target.value))}
                  />
                </div>
                <div>
                  <Typography>{"Maximum Value:"}</Typography>
                  <TextField
                    className={classes.input}
                    type="number"
                    name="maxVal"
                    onChange={(e) => setMaxVal(Number(e.target.value))}
                    variant="outlined"
                    value={maxVal}
                  />
                </div>
              </div>
              <Button
                fullWidth
                variant="contained"
                className={classes.button}
                onClick={handleRandomNum}
              >
                {"Generate Number"}
              </Button>
            </form>
          </Paper>
          <Typography className={classes.title}>
            {"Random Number Generator powered by Random.org"}
          </Typography>
          <iframe
          title={"widget"}
            src="https://www.random.org/widgets/integers/iframe.php?title=True+Random+Number+Generator&amp;buttontxt=Generate&amp;width=450&amp;height=500&amp;border=off&amp;bgcolor=%23FFFFFF&amp;txtcolor=%23777777&amp;altbgcolor=%23a07cc5&amp;alttxtcolor=%23000000&amp;defaultmin=&amp;defaultmax=&amp;fixed=off"
            frameBorder="0"
            width="480px"
            style={{ minHeight: "180px" }}
            scrolling="no"
            longdesc="https://www.random.org/integers/"
          >
            {
              "The numbers generated by this widget come from RANDOM.ORG's true random number generator."
            }
          </iframe>
        </div>
      </div>
    </>
  );
};
